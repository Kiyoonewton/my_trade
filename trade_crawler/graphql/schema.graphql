scalar Timestamp @scalar(class: "App\\GraphQL\\Scalars\\Timestamp")

### queries
type Query {
    oneSeason(seasonId: ID! @eq): Season @find
    allSeason: [Season!]! @all
    allMatchDays: [Details!]! @all
    # getBookerPrediction (orderBy: _ @orderBy(columns:["prediction_count"])): [BookerPrediction!]! @paginate
}

type BookerPrediction {
    team: String
    prediction_count: Int
}

enum ModelType {
    VFL
    VFE
    VFB
}

#### mutations
type Mutation {
    createSeason(seasonId: ID!, model_type: ModelType!): MatchList
}

type CreateSeasonOutput {
    season_id: String
    team1: String
    team2: String
}

type Season {
    iteration: Int
    details: [Details]
}

union MatchesResponse = MatchList | StringResponse

type MatchList {
    data: String
}
type StringResponse {
    message: String!
}

type Details {
    home: String
    away: String
    result: Int
    over: String
    under: String
    matchday_id: Int
    season_id: String
}

type Market {
    type: String
    odds: String
    result: Int
}
